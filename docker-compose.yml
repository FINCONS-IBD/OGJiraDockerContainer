#######################
# Docker Compose file #
#######################

version: '2.0'

services:
    rabbitMQ:
        image: library/rabbitmq:3-management
        container_name: rabbitmq.example.com
        environment:
            RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
            RABBITMQ_DEFAULT_USER: rabbit
            RABBITMQ_DEFAULT_PASS: rabbit
            RABBITMQ_DEFAULT_VHOST: /
            RABBITMQ_NODENAME: node@rabbitMQ

        ports:
            - 15672:15672
            - 5672:5672
        volumes:
            - ./ogjira_volume/rabbitMQ/home:/var/lib/rabbitmq/config
            - ./ogjira_volume/rabbitMQ/home:/var/lib/rabbitmq/mnesia            
            - ./ogjira_volume/rabbitMQ/home:/var/lib/rabbitmq/schema
    publisher:
        container_name: publisher_ogjira
        build: ./ogjira_volume/publisher_nodejs
        ports:
            - 4154:4154
        tty: true
        command: bash -c "sleep 62 && node PublisherDock.js ./config.properties"
        volumes:
            - ./ogjira_volume/publisher_nodejs/publisher:/publisher
        depends_on:
            - rabbitMQ
    proton_engine:
        container_name: proton_engine
        build: ./ogjira_volume/ibm_proton
        ports:
            - 33003:33003
            - 30003:30003
        volumes:
            -  ./ogjira_volume/ibm_proton/IBMProton:/home/IBMProton
            -  ./ogjira_volume/ibm_proton/java_ssl:/etc/ssl/certs/java
        tty: true
        command: bash -c "sleep 65 && cd /home/IBMProton && sh launchProton.sh "
        depends_on:
            - rabbitMQ
    tomcat:
        image: bitnami/tomcat:8.0 
        ports:
            - 8081:8080
            - 8443:8443
        container_name: tomcat-ogjira.example.com
        volumes:
            - ./ogjira_volume/tomcat/tomcat_container:/bitnami
            - ./ogjira_volume/tomcat/logs:/opt/bitnami/tomcat/logs
            - ./ogjira_volume/java_security/security:/opt/bitnami/java/lib/security
    jira:
        image: cptactionhank/atlassian-jira:7.1.7
        container_name: jira.example.com
        ports:
            - 8085:8080
            - 8445:8443
        volumes:
           - ./ogjira_volume/Atlassian/Application Data/JIRA:/var/atlassian/jira
           - ./ogjira_volume/Atlassian/JIRA:/opt/atlassian/jira